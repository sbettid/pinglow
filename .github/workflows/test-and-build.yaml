name: Build and Push Docker Image on Tag

on:
  push:
    tags:
      - "v*"

env:
  BINARY_NAME: pinglow

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust with target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        run: cargo install cross

      - name: Build with cross
        run: cross build --release --target ${{ matrix.target }}

      - name: Rename binary for Docker build
        run: |
          mkdir -p ./bin/${{ matrix.target }}
          cp target/${{ matrix.target }}/release/${{ env.BINARY_NAME }} ./bin/${{ matrix.target }}/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bin-${{ matrix.target }}
          path: ./bin/${{ matrix.target }}

  docker:
    name: Build and Push Multi-Arch Image
    runs-on: ubuntu-latest
    needs: build

    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v5

      - name: Download binaries
        uses: actions/download-artifact@v5
        with:
          path: ./bin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag version
        id: extract_tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build and Push Multi-Arch Image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --build-arg BINARY_NAME=${{ env.BINARY_NAME }} \
            --build-context bin_amd64=./bin/bin-x86_64-unknown-linux-musl \
            --build-context bin_arm64=./bin/bin-aarch64-unknown-linux-musl \
            -t ghcr.io/${{ github.repository }}:${{ env.VERSION }} \
            --push \
            -f ./Dockerfile.multiarch .
  build-doc:
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.x'

      - name: Generate openapi specification
        run: cargo run --bin generate-openapi

      - name: Install dependencies
        working-directory: docs
        run: npm ci

      - name: Generate dyanmic openapi menu
        working-directory: docs
        run: python src/scripts/generateOpenapiMenu.py

      - name: Build the doc
        working-directory: docs
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/build

    deploy:
      name: Deploy to GitHub Pages
      needs: build-doc

      permissions:
        pages: write
        id-token: write

      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}

      runs-on: ubuntu-latest
      steps:
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v4